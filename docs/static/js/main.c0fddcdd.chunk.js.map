{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GrifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","base/GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GrifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeF,OACE,sBAAMC,SAXe,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,MAMxB,SAEI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAACP,GACrBF,EAAeE,EAAEQ,OAAOF,a,sBCRnBG,EAAO,iDAAG,WAAMC,GAAN,gGAEbC,EAFa,iDAEkCC,UAAUF,GAF5C,+DAGAG,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAehBM,GAfgB,4CAAH,sDCAPO,EAAe,SAAC,GAAe,IAAdH,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAIhC,OACA,sBAAKc,UAAU,6CAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCJG,SAASO,EAAT,GAA8B,IAAZlB,EAAW,EAAXA,SAKjC,ECL4B,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAlBAC,qBAAU,WAENvB,EAAQC,GACHuB,MAAK,SAAAC,GAGEH,EAAS,CAELf,KAAKkB,EACLL,SAAQ,SAM1B,CAACnB,IAGIoB,EDnBoBK,CAAazB,GAA/BY,EAAb,EAAON,KAAaa,EAApB,EAAoBA,QAGlB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDf,IAEnDmB,GAAU,mBAAGJ,UAAU,mCAAb,0BACP,qBAAKA,UAAU,YAAf,SAIUH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEIA,GADCA,EAAIC,YEnBjC,IAmCegB,EAnCM,WAGjB,MAAmCxC,mBAAS,CAAC,gBAA7C,mBAAOyC,EAAP,KAAkB1C,EAAlB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC9B,uBAIA,6BAEQ0C,EAAWnB,KAAK,SAAAR,GAAQ,OAAI,cAACkB,EAAD,CAEvBlB,SAAUA,GACLA,YCxB7B4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c0fddcdd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleImputChange=(e)=>{\r\n        setInputValue( e.target.value );\r\n    }\r\n    const handleSubmit = (e)=>{\r\n         e.preventDefault();\r\n         if( inputValue.trim().length > 1){\r\n           \r\n              setCategories(cats=>[inputValue, ...cats,]);\r\n              setInputValue('');\r\n          \r\n            }\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        \r\n        <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={ handleImputChange}\r\n        />\r\n\r\n    </form>\r\n  )\r\n}\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired}\r\n","\r\n\r\nexport const getGifs = async(category)=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Ljo5EzFVixXI79wu2TyzfetoO30wfM8L`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        \r\n        }});\r\n\r\n    // console.log(gifs);\r\nreturn gifs;\r\n    \r\n  }","import React from 'react'\r\n\r\nexport const GrifGridItem = ({title,url})=>{\r\n  \r\n    // console.log(id,title,url);\r\n\r\n    return (\r\n    <div className=\"card animate__animated animate__fadeInDown\">\r\n      \r\n        <img src={url} alt={ title }/>\r\n        <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GrifGridItem} from './GrifGridItem';\r\n\r\n\r\n\r\nexport default function GifGrid({category}) {\r\n\r\n    \r\n\r\n\r\nconst {data: images,loading} = useFetchGifs(category);\r\n\r\n    \r\n  return (\r\n      <>\r\n      <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n         \r\n      {loading &&<p className='animate__animated animate__pulse'>Cargando... </p> }\r\n        { <div className='card-grid'>\r\n            \r\n                \r\n                {\r\n                    images.map((img)=>(\r\n                        <GrifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n        </div> } \r\n    </>\r\n  )\r\n}\r\n","import { useEffect,useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                \r\n                    \r\n                    setState({\r\n                          \r\n                        data:imgs,\r\n                        loading:false,\r\n                    });  \r\n                \r\n                \r\n            })\r\n\r\n    },[category])\r\n   \r\n\r\n    return state;\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from '../components/AddCategory';\r\nimport GifGrid from '../components/GifGrid';\r\n// import React, { Fragment } from 'react';\r\n\r\nconst GitExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories,setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd =()=>{\r\n        \r\n    //     // setCategories([...categories,'Naruto']);\r\n    //     setCategories(cats=>[...cats,'naruto'])\r\n        \r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>GitExpertApp</h1>\r\n            <AddCategory setCategories={ setCategories }/>\r\n           <hr/>\r\n\r\n            \r\n\r\n           <ol>\r\n               {\r\n                   categories.map( category =>(<GifGrid \r\n                    \r\n                        category={category}\r\n                        key={category}\r\n\r\n                    />))\r\n               }\r\n           </ol>\r\n        </>\r\n    );\r\n        \r\n} \r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GitExpertApp from './base/GitExpertApp';\n\n\nReactDOM.render( \n  <GitExpertApp/>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}